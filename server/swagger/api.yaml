swagger: "2.0"

info:
  description: "This is REST API documentation for InstaPic"
  version: "1.0"
  title: "InstaPic"

host: instapic-miles.herokuapp.com
basePath: "/v1"
schemes:
- "https"
- "http"

tags:
- name: "users"
  description: "User related APIs"
- name: "posts"
  description: "Post related APIs"


paths:
  /users/signup:
    post:
      tags:
      - "users"
      summary: "Register a new user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Required information for the user"
        required: true
        schema:
          properties:
            username:
              type: string
            password:
              type: string
      responses:
        200:
          description: "Newly created user object"
          schema:
            properties:
              user:
                $ref: '#/definitions/User'
        500:
          description: "Username is taken by other users"
          schema:
            properties:
              message:
                type: string
                enum:
                  - ERR_USERNAME_IS_USED

  /users/login:
    post:
      tags:
      - "users"
      summary: "Login user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Required information for the user"
        required: true
        schema:
          properties:
            username:
              type: string
            password:
              type: string
      responses:
        200:
          description: "User information"
          schema:
            properties:
              user:
                $ref: '#/definitions/User'
        500:
          description: "Invalid credentials"
          schema:
            properties:
              message:
                type: string
                enum:
                  - ERR_INVALID_USERNAME_OR_PASSWORD

  /users/refresh:
    post:
      tags:
      - "users"
      summary: "Refresh user token"
      produces:
      - "application/json"
      responses:
        200:
          description: "User information"
          schema:
            properties:
              user:
                $ref: '#/definitions/User'
        500:
          description: "User not found"
          schema:
            properties:
              message:
                type: string
                enum:
                  - ERR_INVALID_USER


  /users/{userId}/posts:
    get:
      tags:
      - "users"
      - "posts"
      summary: "All posts of the user sorted by latest"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: userId
        required: true
        type: integer
        minimum: 1
        description: "User ID"
      responses:
        200:
          description: "Posts of the user"
          schema:
            properties:
              posts:
                type: array
                items:
                  $ref: '#/definitions/Post'

  /posts:
    get:
      tags:
      - "posts"
      summary: "Get all posts in descending order of create time."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Posts in descending order of create time."
          schema:
            properties:
              posts:
                type: array
                items:
                  $ref: '#/definitions/Post'
    post:
      tags:
      - "posts"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: formData
        name: "file"
        type: file
        description: "File of the image of the post"
        required: true
      - in: formData
        name: "userId"
        type: string
        description: "User id of the uploader"
        required: true
      - in: formData
        name: "description"
        type: string
        description: "Description of the post"
        required: true
      responses:
        200:
          description: "Newly created post object"
          schema:
            properties:
              post:
                $ref: '#/definitions/Post'
        500:
          description: "User not match or image is invalid"
          schema:
            properties:
              message:
                type: string
                enum:
                  - INVALID_IMAGE_FILE
                  - INVALID_OPERATION


definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      username:
        type: "string"
  Post:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      url:
        type: "string"
      description:
        type: "string"
      created:
        type: string
        format: date-time
      author:
        $ref: '#/definitions/User'

parameters:
  user_id:
    name: userId
    in: path
    description: ID of the user
    required: true
    type: integer
    format: int64
